// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  username  String   @unique
  password  String
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  avatar    String?

  doctor  Doctor?
  patient Patient?

  @@map("users")
}

model Specialty {
  id          String  @default(uuid())
  name        String
  description String?

  createdAt DateTime @default(now())
  doctor    Doctor[]

  @@id([id])
  @@unique([name])
  @@map("specialties")
}

model Doctor {
  id    String @default(uuid())
  crm   String @unique
  email String @unique

  createdAt DateTime @default(now())

  user_id      String
  specialty_id String

  user            User              @relation(fields: [user_id], references: [id])
  specialty       Specialty         @relation(fields: [specialty_id], references: [id])
  doctorInfo      DoctorInfo?
  doctorSchedules DoctorSchedules[]
  appointment     Appointment[]

  @@id([id])
  @@unique([user_id])
  @@map("doctors")
}

model DoctorInfo {
  id        String  @default(uuid())
  duration  Int
  price     Decimal
  doctor_id String

  doctor Doctor @relation(fields: [doctor_id], references: [id])

  @@id([id])
  @@unique([doctor_id])
  @@map("doctor_info")
}

model Patient {
  id       String @default(uuid())
  document String
  email    String

  user_id     String        @unique
  user        User          @relation(fields: [user_id], references: [id])
  appointment Appointment[]

  @@id([id])
  @@unique([document, email])
  @@map("patients")
}

model DoctorSchedules {
  id          String @default(uuid())
  start_at    String
  end_at      String
  day_of_week Int
  doctor_id   String

  doctor Doctor @relation(fields: [doctor_id], references: [id])

  @@id([id])
  @@map("doctor_schedules")
}

model Appointment {
  id          String   @default(uuid())
  date        DateTime
  note        String?
  is_finished Boolean  @default(false)
  doctor_id   String
  patient_id  String

  doctor  Doctor  @relation(fields: [doctor_id], references: [id])
  patient Patient @relation(fields: [patient_id], references: [id], onUpdate: NoAction, onDelete: NoAction)

  @@id([id])
  @@map("appointments")
}
